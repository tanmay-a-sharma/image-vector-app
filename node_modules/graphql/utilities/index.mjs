// Produce the GraphQL query recommended for a full schema introspection.
export { getIntrospectionQuery } from 'graphql/utilities/getIntrospectionQuery.mjs';
// Gets the target Operation from a Document.
export { getOperationAST } from 'graphql/utilities/getOperationAST.mjs'; // Gets the Type for the target Operation AST.

export { getOperationRootType } from 'graphql/utilities/getOperationRootType.mjs'; // Convert a GraphQLSchema to an IntrospectionQuery.

export { introspectionFromSchema } from 'graphql/utilities/introspectionFromSchema.mjs'; // Build a GraphQLSchema from an introspection result.

export { buildClientSchema } from 'graphql/utilities/buildClientSchema.mjs'; // Build a GraphQLSchema from GraphQL Schema language.

export { buildASTSchema, buildSchema } from 'graphql/utilities/buildASTSchema.mjs';
// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.
export { extendSchema } from 'graphql/utilities/extendSchema.mjs'; // Sort a GraphQLSchema.

export { lexicographicSortSchema } from 'graphql/utilities/lexicographicSortSchema.mjs'; // Print a GraphQLSchema to GraphQL Schema language.

export {
  printSchema,
  printType,
  printIntrospectionSchema,
} from 'graphql/utilities/printSchema.mjs'; // Create a GraphQLType from a GraphQL language AST.

export { typeFromAST } from 'graphql/utilities/typeFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST with a type.

export { valueFromAST } from 'graphql/utilities/valueFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST without a type.

export { valueFromASTUntyped } from 'graphql/utilities/valueFromASTUntyped.mjs'; // Create a GraphQL language AST from a JavaScript value.

export { astFromValue } from 'graphql/utilities/astFromValue.mjs'; // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.

export { TypeInfo, visitWithTypeInfo } from 'graphql/utilities/TypeInfo.mjs'; // Coerces a JavaScript value to a GraphQL type, or produces errors.

export { coerceInputValue } from 'graphql/utilities/coerceInputValue.mjs'; // Concatenates multiple AST together.

export { concatAST } from 'graphql/utilities/concatAST.mjs'; // Separates an AST into an AST per Operation.

export { separateOperations } from 'graphql/utilities/separateOperations.mjs'; // Strips characters that are not significant to the validity or execution of a GraphQL document.

export { stripIgnoredCharacters } from 'graphql/utilities/stripIgnoredCharacters.mjs'; // Comparators for types

export {
  isEqualType,
  isTypeSubTypeOf,
  doTypesOverlap,
} from 'graphql/utilities/typeComparators.mjs'; // Asserts that a string is a valid GraphQL name

export { assertValidName, isValidNameError } from 'graphql/utilities/assertValidName.mjs'; // Compares two GraphQLSchemas and detects breaking changes.

export {
  BreakingChangeType,
  DangerousChangeType,
  findBreakingChanges,
  findDangerousChanges,
} from 'graphql/utilities/findBreakingChanges.mjs';
